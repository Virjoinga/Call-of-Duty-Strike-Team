using UnityEngine;

public class GameModeManager : SingletonMonoBehaviour
{
	public GameObject[] DataLinks = new GameObject[6];

	public static GameModeManager Instance
	{
		get
		{
			return SingletonMonoBehaviour.GetAutoGeneratedSingletonInstance<GameModeManager>();
		}
	}

	private void Start()
	{
	}

	public void ActivateRelevantGameMode()
	{
		GMGData.GameType gameType = GMGData.GameType.Specops;
		gameType = ActStructure.Instance.CurrentGMGGameType();
		if (gameType == GMGData.GameType.Total)
		{
			gameType = GMGData.GameType.Specops;
		}
		if ((bool)GMGData.Instance)
		{
			GMGData.Instance.CurrentGameType = gameType;
		}
		DisableAllGameModes();
		GameObject gameObject = DataLinks[(int)gameType];
		if (gameObject != null)
		{
			gameObject.SetActive(true);
		}
		if (gameType == GMGData.GameType.Flashpoint)
		{
			MissionListings.eMissionID currentMissionID = ActStructure.Instance.CurrentMissionID;
			int currentSection = ActStructure.Instance.CurrentSection;
			MissionListings.FlashpointData.Objective flashpointObjective = MissionListings.Instance.Mission(currentMissionID).Sections[currentSection].FlashpointObjective;
			switch (flashpointObjective)
			{
			case MissionListings.FlashpointData.Objective.Survive:
			case MissionListings.FlashpointData.Objective.Clear:
			case MissionListings.FlashpointData.Objective.Collect:
			case MissionListings.FlashpointData.Objective.Destroy:
				MissionListings.Instance.GenerateNewFlashpointMission(flashpointObjective);
				break;
			default:
				MissionListings.Instance.GenerateNewFlashpointMission();
				break;
			}
		}
	}

	public void DisableAllGameModes()
	{
		GameObject[] dataLinks = DataLinks;
		foreach (GameObject gameObject in dataLinks)
		{
			if (gameObject != null)
			{
				gameObject.SetActive(false);
			}
		}
	}
}
