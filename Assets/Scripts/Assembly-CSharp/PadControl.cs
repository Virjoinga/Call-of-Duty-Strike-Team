using UnityEngine;

public class PadControl : SingletonMonoBehaviour
{
	private enum ButtonMapping
	{
		Ads = 4,
		Fire = 5,
		Claymore = 3,
		ReloadChangeWeapon = 2,
		Crouch = 1,
		Interact = 0,
		Pause = 7
	}

	public PadInputPc360 PadPC360;

	private iPadInput mPad;

	private Vector2 mMoveAxis = Vector2.zero;

	private Vector2 mLookAxis = Vector2.zero;

	public static PadControl Instance
	{
		get
		{
			return SingletonMonoBehaviour.GetAutoGeneratedSingletonInstance<PadControl>();
		}
	}

	private void Start()
	{
		mPad = Object.Instantiate(PadPC360) as iPadInput;
		mPad.Reset();
	}

	public bool IsPadConnected()
	{
		return mPad != null && mPad.IsConnected();
	}

	public bool ChangeCameraPressed()
	{
		return mPad.AxisPressedPositive(6);
	}

	public bool GrenadePressed()
	{
		return mPad.AxisPressedPositive(7);
	}

	public bool ClaymorePressed()
	{
		return mPad.Pressed(3);
	}

	public bool ReloadChangeWeaponPressed()
	{
		return mPad.Pressed(2);
	}

	public bool ReloadChangeWeaponHeld()
	{
		return mPad.Held(2);
	}

	public bool CrouchPressed()
	{
		return mPad.Pressed(1);
	}

	public bool InteractPressed()
	{
		return mPad.Pressed(0);
	}

	public bool PausePressed()
	{
		return mPad.Pressed(7);
	}

	public bool AdsDown()
	{
		return mPad.Down(4);
	}

	public bool AdsReleased()
	{
		return mPad.Released(4);
	}

	public bool FireDown()
	{
		return mPad.Down(5);
	}

	public bool ChangeUnitPressed()
	{
		return mPad.AxisPressedPositive(5);
	}

	public bool ComeToMePressed()
	{
		return mPad.AxisPressedNegative(5);
	}

	public bool TargetRightPressed()
	{
		return mPad.AxisPressedPositive(4);
	}

	public bool TargetLeftPressed()
	{
		return mPad.AxisPressedNegative(4);
	}

	public Vector2 MoveAxis()
	{
		mMoveAxis.x = mPad.AxisValue(0);
		mMoveAxis.y = 0f - mPad.AxisValue(1);
		return mMoveAxis;
	}

	public Vector2 LookAxis()
	{
		mLookAxis.x = mPad.AxisValue(2);
		mLookAxis.y = 0f - mPad.AxisValue(3);
		return mLookAxis;
	}
}
