using UnityEngine;

public class BriefingSFX : SFXBank
{
	public BriefingSFXData BriefingData;

	public SoundFXData BoxOpen;

	public SoundFXData BoxClose;

	public SoundFXData BoxStatic;

	public SoundFXData CircleOpen;

	public SoundFXData CircleClose;

	public SoundFXData ScreenStatic;

	public SoundFXData TextType;

	public SoundFXData CameraMove;

	public static BriefingSFX Instance
	{
		get
		{
			return SingletonMonoBehaviour.GetAutoGeneratedSingletonInstance<BriefingSFX>();
		}
	}

	public static bool HasInstance
	{
		get
		{
			return SingletonMonoBehaviour.GetSingletonInstance<BriefingSFX>() != null;
		}
	}

	protected override void OnDestroy()
	{
		if (Application.isPlaying && SoundManager.Instance.HasGamePlayStarted())
		{
			base.OnDestroy();
			BriefingData = null;
		}
	}

	public void PlayNarration(MissionListings.eMissionID missionId, int narrationId)
	{
		if (BriefingData != null && BriefingData.Narration != null && narrationId >= 0 && narrationId < BriefingData.Narration.Length)
		{
			StopAllNarration(MissionListings.eMissionID.MI_MAX);
			if (BriefingData.Narration[narrationId] != null)
			{
				BriefingData.Narration[narrationId].Play2D();
			}
		}
	}

	public void StopAllNarration(MissionListings.eMissionID missionId)
	{
		if (BriefingData == null || BriefingData.Narration == null)
		{
			return;
		}
		for (int i = 0; i < BriefingData.Narration.Length; i++)
		{
			if (BriefingData.Narration[i] != null)
			{
				BriefingData.Narration[i].Stop2D();
			}
		}
	}
}
